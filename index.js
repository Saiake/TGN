const { Telegraf, Markup, Scenes, session } = require('telegraf')
const { Worker } = require('node:worker_threads')
const fs = require('fs')

const BOSS = 6035751718
const filepath = './src/–æ–ø–ª–∞—á–µ–Ω–æ.txt'

const payScene = new Scenes.WizardScene(
  'payScene',
  (ctx) => {
    fs.readFile(filepath, function (err, data) {
      if (data.indexOf(ctx.wizard.state.id + '\n') >= 0) {
        ctx.reply('–í—ã —É–∂–µ –æ–ø–ª–∞—á–∏–≤–∞–ª–∏!')
        return ctx.scene.leave()
      }
      else {
        ctx.reply('üì© –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –ø–æ –æ–ø–ª–∞—Ç–µ:')
        return ctx.wizard.next();
      }
    });
  },
  (ctx) => {
    if (ctx.message.text.indexOf('https://solscan.io/tx/') == -1) {
      ctx.reply('–£–ø—Å, –∫–∞–∂–µ—Ç—Å—è –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–µ —Å—Å—ã–ª–∫—É');
      return; 
    }
    bot.telegram.sendMessage(BOSS, ctx.message.text, Markup.inlineKeyboard(
      [
        Markup.button.callback('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', ctx.message.chat.id)
      ]))
    ctx.reply('–ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —Ñ—É–Ω–∫—Ü–∏–∏ üß¢ –ü–æ–¥–±–æ—Ä –æ–¥–µ–∂–¥—ã', Markup.inlineKeyboard(
      [
        Markup.button.callback('üß¢ –ü–æ–¥–±–æ—Ä –æ–¥–µ–∂–¥—ã', 'clothes')
      ]
    ))
    return ctx.scene.leave()
  }
)

const clothesScene = new Scenes.WizardScene(
  'clothesScene',
  (ctx) => {
    ctx.reply('–í–≤–µ–¥–∏—Ç–µ –∏–º—è –≤–∞—à–µ–≥–æ CAThlete')
    ctx.wizard.state = {};
    return ctx.wizard.next();
  },
  (ctx) => {
    ctx.wizard.state.name = ctx.message.text
    ctx.replyWithHTML('–í–≤–µ–¥–∏—Ç–µ <b>–∏–º–µ—é—â–µ–µ—Å—è</b> –∑–Ω–∞—á–µ–Ω–∏–µ —Å–∏–ª—ã');
    return ctx.wizard.next();
  },
  (ctx) => {
    ctx.wizard.state.power = ctx.message.text
    if (/^\d+$/.test(ctx.wizard.state.power)) {
      ctx.replyWithHTML('–í–≤–µ–¥–∏—Ç–µ <b>–∏–º–µ—é—â–µ–µ—Å—è</b> –∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞–º–∏–Ω—ã');
      return ctx.wizard.next()
    }
    else {
      return ctx.replyWithHTML('–í–≤–µ–¥–∏—Ç–µ <b>–∏–º–µ—é—â–µ–µ—Å—è</b> –∑–Ω–∞—á–µ–Ω–∏–µ —Å–∏–ª—ã')
    }
  },
  (ctx) => {
    ctx.wizard.state.stamina = ctx.message.text
    if (/^\d+$/.test(ctx.wizard.state.stamina)) {
      ctx.replyWithHTML('–í–≤–µ–¥–∏—Ç–µ <b>–∏–º–µ—é—â–µ–µ—Å—è</b> –∑–Ω–∞—á–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏');
      return ctx.wizard.next()
    }
    else {
      return ctx.replyWithHTML('–í–≤–µ–¥–∏—Ç–µ <b>–∏–º–µ—é—â–µ–µ—Å—è</b> –∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞–º–∏–Ω—ã')
    }
  },
  (ctx) => {
    ctx.wizard.state.speed = ctx.message.text
    if (/^\d+$/.test(ctx.wizard.state.speed)) {
      ctx.replyWithHTML('–í–≤–µ–¥–∏—Ç–µ <b>–∂–µ–ª–∞–µ–º–æ–µ</b> –∑–Ω–∞—á–µ–Ω–∏–µ —Å–∏–ª—ã');
      return ctx.wizard.next()
    }
    else {
      return ctx.replyWithHTML('–í–≤–µ–¥–∏—Ç–µ <b>–∏–º–µ—é—â–µ–µ—Å—è</b> –∑–Ω–∞—á–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏')
    }
  },
  (ctx) => {
    ctx.wizard.state.wpower = ctx.message.text
    if (/^\d+$/.test(ctx.wizard.state.wpower)) {
      ctx.replyWithHTML('–í–≤–µ–¥–∏—Ç–µ <b>–∂–µ–ª–∞–µ–º–æ–µ</b> –∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞–º–∏–Ω—ã');
      return ctx.wizard.next()
    }
    else {
      return ctx.replyWithHTML('–í–≤–µ–¥–∏—Ç–µ <b>–∂–µ–ª–∞–µ–º–æ–µ</b> –∑–Ω–∞—á–µ–Ω–∏–µ —Å–∏–ª—ã')
    }
  },
  (ctx) => {
    ctx.wizard.state.wstamina = ctx.message.text
    if (/^\d+$/.test(ctx.wizard.state.wstamina)) {
      ctx.replyWithHTML('–í–≤–µ–¥–∏—Ç–µ <b>–∂–µ–ª–∞–µ–º–æ–µ</b> –∑–Ω–∞—á–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏');
      return ctx.wizard.next()
    }
    else {
      return ctx.replyWithHTML('–í–≤–µ–¥–∏—Ç–µ <b>–∂–µ–ª–∞–µ–º–æ–µ</b> –∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∞–º–∏–Ω—ã')
    }
  },
  (ctx) => {
    ctx.wizard.state.wspeed = ctx.message.text
    if (/^\d+$/.test(ctx.wizard.state.wspeed)) {
      let params = []
      params.push(ctx.wizard.state.power)
      params.push(ctx.wizard.state.stamina)
      params.push(ctx.wizard.state.speed)
      let wanted = []
      wanted.push(ctx.wizard.state.wpower)
      wanted.push(ctx.wizard.state.wstamina)
      wanted.push(ctx.wizard.state.wspeed)
      ctx.reply('–°–µ–∫—É–Ω–¥–æ—á–∫—É, —Å–µ–π—á–∞—Å —è –ø–æ–¥–±–µ—Ä—É –í–∞–º –≤–∞—Ä–∏–∞–Ω—Ç—ã...')
      runService(
        {
          params: params, 
          wanted: wanted
        }).then(msg => {
          ctx.reply(ctx.wizard.state.name + ' –º–æ–∂–µ—Ç –Ω–∞–¥–µ—Ç—å –Ω–∞ —Å–µ–±—è:')
          for (let i = 0; i < msg.result.length; i++) {
            let message = ''
            for (let j = 0; j < msg.result[i].length; j++) {
              message = message + msg.result[i][j].get(0) + '-' + 
                        msg.result[i][j].get(1) + '-' + 
                        msg.result[i][j].get(2) + ' ' +
                        msg.result[i][j].get('type') + ' '
            }
            message = message + ' <b>~ Price</b> ' + msg.result[i]['price']
            ctx.replyWithHTML(message)
          }
        })
      return ctx.scene.leave()
    }
    else {
      return ctx.replyWithHTML('–í–≤–µ–¥–∏—Ç–µ <b>–∂–µ–ª–∞–µ–º–æ–µ</b> –∑–Ω–∞—á–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏')
    }
  }
)

function runService(data) {
  return new Promise((resolve, reject) => {
    const worker = new Worker('./ExcelReader.js', { workerData: data });
    worker.on('message', resolve);
    worker.on('error', reject);
    worker.on('exit', (code) => {
      if (code !== 0)
        reject(new Error(`Worker stopped with exit code ${code}`));
    })
  })
}

const token = '6034191716:AAEMdbm9eJGn4-0C9r0UzLcZOw7JWqEC4Vw'
const bot = new Telegraf(token, {handlerTimeout: 9_000_000});

bot.start((ctx) => {
  ctx.reply('Send me ',
    Markup.keyboard(
      [
        'üìã –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è',
        'üìÅ –ß—Ç–æ –º–æ–∂–µ—Ç –±–æ—Ç',
        'üß¢ –ü–æ–¥–±–æ—Ä –æ–¥–µ–∂–¥—ã',
        'üò• –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º'
      ]).resize()
  )
})

bot.hears(/üìã –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è/musg, async (ctx) => {
  await ctx.reply(`–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º, ` + ctx.message.chat.first_name + ` –Ω–∞ –Ω–∞—à–µ–º —Å–µ—Ä–≤–∏—Å–µ WalkenClothes!)
–î–∞–Ω–Ω—ã–π –±–æ—Ç –±—ã–ª —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã –æ–±–ª–µ–≥—á–∏—Ç—å –≤–∞–º –≤—ã–±–æ—Ä –æ–¥–µ–∂–¥—ã –ø–æ–¥ –≤–∞—à–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –Ω—É–∂–¥—ã
–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–æ–≥–Ω–∞—Ç—å —Å–≤–æ–∏ —Å—Ç–∞—Ç—ã –¥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è, —Ç–æ —ç—Ç–æ—Ç –±–æ—Ç –≤–∞–º —Ç–æ—á–Ω–æ –ø–æ–¥–æ–π–¥–µ—Ç!`)
  await ctx.replyWithPhoto({ source: "./src/–∫–∞—Ä—Ç–∏–Ω–∫–∞.png" })
  await ctx.reply("–ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –µ–≥–æ –Ω—É–∂–Ω–æ –æ–ø–ª–∞—Ç–∏—Ç—å.\n\
–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ü–µ–Ω–∞ –º–µ—Å—è—á–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 349 wlkn, –ø–µ—Ä–µ–≤–æ–¥–∏ –º–æ–Ω–µ—Ç—ã –Ω–∞ –¥–∞–Ω–Ω—ã–π –∫–æ—à–µ–ª–µ–∫ –∏,\n\
–∫–∞–∫ —Ç–æ–ª—å–∫–æ –∑–∞–ø—Ä–æ—Å –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω, —Ç—ã –ø–æ–ª—É—á–∏—à—å –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º—É —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É\n\
\n\
–ê–¥—Ä–µ—Å –æ–ø–ª–∞—Ç—ã:\n\
`6EqB7B7V7USEpJsthe6bXsbXVxdFt9HgEnruPSaEiRew`\n\
\n\
(–ê–¥—Ä–µ—Å —Å–∫–æ–ø–∏—Ä—É–µ—Ç—Å—è –≤ –±—É—Ñ–µ—Ä –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –Ω–µ–≥–æ)\n\
\n\
–í–∏–¥–µ–æ-–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –æ–ø–ª–∞—Ç–µ –Ω–∏–∂–µ!", { parse_mode: "Markdown" })
  await ctx.replyWithVideo({ source: "./src/–í–∏–¥–µ–æ.MOV" })
  await ctx.reply(`–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –æ–ø–ª–∞—á–µ–Ω–æ, –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –æ–ø–ª–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
https://solscan.io/tx/`, Markup.inlineKeyboard(
    [
      Markup.button.callback('–û–ø–ª–∞—á–µ–Ω–æ', 'pay')
    ]
  ))
})

const stage = new Scenes.Stage([payScene, clothesScene]);
bot.use(session());
bot.use(stage.middleware());
stage.register(payScene);
stage.register(clothesScene);

bot.hears(/üß¢ –ü–æ–¥–±–æ—Ä –æ–¥–µ–∂–¥—ã/musg, (ctx) => {
  fs.readFile(filepath, function (err, data) {
    if (data.indexOf(ctx.message.chat.id + '\n') == -1) {
      ctx.reply('–ú–Ω–µ –Ω—É–∂–Ω–æ –µ—â—ë –Ω–µ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É')
    }
    else {
      ctx.scene.enter('clothesScene')
    }
  });
})

bot.hears(/üß¢ –ü–æ–¥–±–æ—Ä –æ–¥–µ–∂–¥—ã/musg, (ctx) => {
  ctx.reply(`–í—ã –≤–≤–æ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ —Å–≤–æ–µ–≥–æ CAThlete (–∑–Ω–∞—á–µ–Ω–∏–µ —Å–∏–ª—ã, —Å—Ç–∞–º–∏–Ω—ã –∏ —Å–∫–æ—Ä–æ—Å—Ç–∏)

–ó–∞—Ç–µ–º –≤–≤–æ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫, –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –¥–æ—Å—Ç–∏—á—å
  
–ë–æ—Ç –ø–æ–¥–±–∏—Ä–∞–µ—Ç –≤–∞–º –æ–¥–µ–∂–¥—É`)
})

bot.hears(/üò• –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º/musg, (ctx) => {
  ctx.reply('–î–ª—è —Å–≤—è–∑–∏ —Å –∞–¥–º–∏–Ω–æ–º: ')
})

bot.action('pay', (ctx) => {
  ctx.scene.enter('payScene', {id: ctx.update.callback_query.from.id})
})

bot.action(/^\d+$/, (ctx) => {
  if (ctx.message.from.id == BOSS) {
    fs.appendFileSync('./src/–æ–ø–ª–∞—á–µ–Ω–æ.txt', ctx.match[0] + '\n');
    ctx.reply('–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é!')
  }
})

bot.action('clothes', (ctx) => {
  fs.readFile(filepath, function (err, data) {
    if (data.indexOf(ctx.message.chat.id + '\n') == -1) {
      ctx.reply('–ú–Ω–µ –Ω—É–∂–Ω–æ –µ—â—ë –Ω–µ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É')
    }
    else {
      ctx.scene.enter('clothesScene')
    }
  });
})

bot.launch();